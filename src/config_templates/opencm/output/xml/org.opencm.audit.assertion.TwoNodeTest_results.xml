<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="[3] PREP_ESB_IS_V101_01 <=> PREP_ESB_IS_V101_02"
           tests="32"
           failures="1"
           errors="0"
           skipped="0"
           time="0.000">
  <properties />
            <testcase name="OpenCM [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest">
                <failure type="java.lang.AssertionError"
                  message="expected [1.7.8] but found [1.8.1]"
              >
<![CDATA[java.lang.AssertionError: expected [1.7.8] but found [1.8.1]
  org.testng.Assert.fail(Assert.java:96)
  org.testng.Assert.failNotEquals(Assert.java:776)
  org.testng.Assert.assertEqualsImpl(Assert.java:137)
  org.testng.Assert.assertEquals(Assert.java:118)
  org.testng.Assert.assertEquals(Assert.java:453)
  org.testng.Assert.assertEquals(Assert.java:463)
  org.opencm.audit.assertion.TwoNodeTest.assertProperty(TwoNodeTest.java:84)
  sun.reflect.GeneratedMethodAccessor646.invoke(Unknown Source)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  java.lang.reflect.Method.invoke(Method.java:498)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
  org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
  org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
  org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
  org.testng.TestRunner.privateRun(TestRunner.java:648)
  org.testng.TestRunner.run(TestRunner.java:505)
  org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
  org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
  org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
  org.testng.SuiteRunner.run(SuiteRunner.java:364)
  org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
  org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
  org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
  org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
  org.testng.TestNG.runSuites(TestNG.java:1049)
  org.testng.TestNG.run(TestNG.java:1017)
  OpenCM.priv.twoNodeAudit.auditCustom(twoNodeAudit.java:469)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  java.lang.reflect.Method.invoke(Method.java:498)
  com.wm.app.b2b.server.JavaService.baseInvoke(JavaService.java:404)
  com.wm.app.b2b.server.invoke.InvokeManager.process(InvokeManager.java:748)
  com.wm.app.b2b.server.util.tspace.ReservationProcessor.process(ReservationProcessor.java:39)
  com.wm.app.b2b.server.invoke.StatisticsProcessor.process(StatisticsProcessor.java:50)
  com.wm.app.b2b.server.invoke.ServiceCompletionImpl.process(ServiceCompletionImpl.java:243)
  com.wm.app.b2b.server.invoke.ValidateProcessor.process(ValidateProcessor.java:49)
  com.wm.app.b2b.server.invoke.PipelineProcessor.process(PipelineProcessor.java:171)
  com.wm.app.b2b.server.ACLManager.process(ACLManager.java:299)
  com.wm.app.b2b.server.invoke.DispatchProcessor.process(DispatchProcessor.java:34)
  com.wm.app.b2b.server.AuditLogManager.process(AuditLogManager.java:377)
  com.wm.app.b2b.server.invoke.InvokeManager.invoke(InvokeManager.java:626)
  com.wm.app.b2b.server.invoke.InvokeManager.invoke(InvokeManager.java:441)
  com.wm.app.b2b.server.invoke.InvokeManager.invoke(InvokeManager.java:397)
  com.wm.app.b2b.server.ServiceManager.invoke(ServiceManager.java:252)
  com.wm.app.b2b.server.BaseService.invoke(BaseService.java:229)
  com.wm.lang.flow.FlowInvoke.invoke(FlowInvoke.java:257)
  com.wm.lang.flow.FlowState.invokeNode(FlowState.java:535)
  com.wm.lang.flow.FlowState.step(FlowState.java:401)
  com.wm.lang.flow.FlowState.invoke(FlowState.java:372)
  com.wm.app.b2b.server.FlowSvcImpl.baseInvoke(FlowSvcImpl.java:1132)
  com.wm.app.b2b.server.invoke.InvokeManager.process(InvokeManager.java:748)
  com.wm.app.b2b.server.util.tspace.ReservationProcessor.process(ReservationProcessor.java:39)
  com.wm.app.b2b.server.invoke.StatisticsProcessor.process(StatisticsProcessor.java:50)
  com.wm.app.b2b.server.invoke.ServiceCompletionImpl.process(ServiceCompletionImpl.java:243)
  com.wm.app.b2b.server.invoke.ValidateProcessor.process(ValidateProcessor.java:49)
  com.wm.app.b2b.server.invoke.PipelineProcessor.process(PipelineProcessor.java:171)
  com.wm.app.b2b.server.ACLManager.process(ACLManager.java:299)
  com.wm.app.b2b.server.invoke.DispatchProcessor.process(DispatchProcessor.java:34)
  com.wm.app.b2b.server.AuditLogManager.process(AuditLogManager.java:377)
  com.wm.app.b2b.server.invoke.InvokeManager.invoke(InvokeManager.java:626)
  com.wm.app.b2b.server.invoke.InvokeManager.invoke(InvokeManager.java:441)
  com.wm.app.b2b.server.invoke.InvokeManager.invoke(InvokeManager.java:355)
  com.wm.app.b2b.server.dispatcher.trigger.Trigger.invokeService(Trigger.java:564)
  com.wm.app.b2b.server.dispatcher.trigger.Trigger.processMessage(Trigger.java:462)
  com.wm.app.b2b.server.dispatcher.trigger.DefaultTriggerTaskHelper.process(DefaultTriggerTaskHelper.java:255)
  com.wm.app.b2b.server.dispatcher.trigger.TriggerTask.run(TriggerTask.java:307)
  com.wm.util.pool.PooledThread.run(PooledThread.java:127)
  java.lang.Thread.run(Thread.java:748)
]]>
      </failure>

          </testcase>
  
  
            <testcase name="WmWin32 [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmTCDBAdapter [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WxCM_Test [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmPublic [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmTCDBAdapter [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="Default [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmVCS [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WxCM [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmCloud [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmAssetPublisher [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmXSLT [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="OpenCM [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmART [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmRoot [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmISExtDC [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmART [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmXSLT [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmRoot [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmFlatFile [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmFlatFile [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmWin32 [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmISExtDC [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmARTExtDC [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmAssetPublisher [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmVCS [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmARTExtDC [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WxCM_Test [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WxCM [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmPublic [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="Default [version]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
                <testcase name="WmCloud [enabled]" time="0.000" classname="org.opencm.audit.assertion.TwoNodeTest" />
      
</testsuite>
